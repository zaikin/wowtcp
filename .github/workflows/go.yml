name: Golang linter
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: setup go
      uses: actions/setup-go@v2
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2

  unit_tests:
    name: "Unit tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.22
      - name: Test
        run: go test -cover -coverprofile=coverage.txt ./...
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.txt 
          
  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request' 
    runs-on: ubuntu-latest
    needs: unit_tests 
    permissions:
      contents:      read
      actions:       read
      pull-requests: write
    steps:
      - uses: fgrosse/go-coverage-report@v1.1.1
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.txt"