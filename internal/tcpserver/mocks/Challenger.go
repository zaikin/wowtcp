// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	challenger "wowtcp/pkg/challenger"

	mock "github.com/stretchr/testify/mock"
)

// Challenger is an autogenerated mock type for the Challenger type
type Challenger struct {
	mock.Mock
}

// NewChallenge provides a mock function with given fields: resourceType
func (_m *Challenger) NewChallenge(resourceType string) challenger.Challenge {
	ret := _m.Called(resourceType)

	if len(ret) == 0 {
		panic("no return value specified for NewChallenge")
	}

	var r0 challenger.Challenge
	if rf, ok := ret.Get(0).(func(string) challenger.Challenge); ok {
		r0 = rf(resourceType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(challenger.Challenge)
		}
	}

	return r0
}

// NewChallenger creates a new instance of Challenger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewChallenger(t interface {
	mock.TestingT
	Cleanup(func())
}) *Challenger {
	mock := &Challenger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
